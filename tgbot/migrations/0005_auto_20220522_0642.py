# Generated by Django 3.2.13 on 2022-05-22 06:42

from django.db import migrations, models
import django.db.models.deletion
import tgbot.models


class Migration(migrations.Migration):

    dependencies = [
        ('tgbot', '0004_delete_location'),
    ]

    operations = [
        migrations.CreateModel(
            name='AddCycleInTrening',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'verbose_name': 'Добавление цикла в курс',
                'verbose_name_plural': 'Добавление цикла в курс',
            },
        ),
        migrations.CreateModel(
            name='AddExerciseInTreningDay',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cycle', models.IntegerField(blank=True, null=True, verbose_name='Количество подходов')),
                ('amount', models.IntegerField(blank=True, null=True, verbose_name='Количество повторений')),
                ('rir', models.IntegerField(blank=True, null=True, verbose_name='Субъективный уровень нагрузки')),
            ],
            options={
                'verbose_name': 'Добавление упражнений в тренировачных день',
                'verbose_name_plural': 'Добавление упражнений в тренировачных день',
            },
        ),
        migrations.CreateModel(
            name='AddTreningdayInWeek',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'verbose_name': 'Добавление тренировачных дней в неделю',
                'verbose_name_plural': 'Добавление тренировачных дней в неделю',
            },
        ),
        migrations.CreateModel(
            name='AddWeekInCycle',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'verbose_name': 'Добавление недели в цикл',
                'verbose_name_plural': 'Добавление недели в цикл',
            },
        ),
        migrations.CreateModel(
            name='Cycle',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('admin_name', models.CharField(max_length=255, unique=True, verbose_name='Название для тренера')),
                ('user_name', models.CharField(default='None', max_length=255, verbose_name='Название для клиента')),
            ],
            options={
                'verbose_name': 'Цикл',
                'verbose_name_plural': 'Циклы',
                'ordering': ('-admin_name',),
            },
        ),
        migrations.CreateModel(
            name='Exercise',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, unique=True, verbose_name='Название')),
                ('short_discription', models.TextField(blank=True, help_text='Короткое описание для напоминания', null=True, verbose_name='Короткое описание')),
                ('long_discription', models.TextField(blank=True, help_text='Подробное описание для понимания', null=True, verbose_name='Подробное описание')),
                ('representation', models.TextField(blank=True, help_text='Ссылка на видео упражнения', null=True, verbose_name='Ссылка на видео')),
            ],
            options={
                'verbose_name': 'Упражнение',
                'verbose_name_plural': 'Упражнения',
                'ordering': ('-name',),
            },
        ),
        migrations.CreateModel(
            name='TreningDay',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('admin_name', models.CharField(max_length=255, unique=True, verbose_name='Название для тренера')),
                ('user_name', models.CharField(default='None', max_length=255, verbose_name='Название для клиента')),
                ('exercise', models.ManyToManyField(related_name='exercises', through='tgbot.AddExerciseInTreningDay', to='tgbot.Exercise', verbose_name='Упражнения')),
            ],
            options={
                'verbose_name': 'Тренировачный день',
                'verbose_name_plural': 'Тренировачные дни',
                'ordering': ('-admin_name',),
            },
        ),
        migrations.CreateModel(
            name='TreningWeek',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('admin_name', models.CharField(max_length=255, unique=True, verbose_name='Название для тренера')),
                ('user_name', models.CharField(default='None', max_length=255, verbose_name='Название для клиента')),
                ('trening_day', models.ManyToManyField(related_name='trening_days', through='tgbot.AddTreningdayInWeek', to='tgbot.TreningDay', verbose_name='Тренировачный день')),
            ],
            options={
                'verbose_name': 'Тренировачная неделя',
                'verbose_name_plural': 'Тренировачные недели',
                'ordering': ('-admin_name',),
            },
        ),
        migrations.CreateModel(
            name='Trening',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, unique=True, verbose_name='Название')),
                ('cycle', models.ManyToManyField(related_name='cycle', through='tgbot.AddCycleInTrening', to='tgbot.Cycle', verbose_name='Цикл')),
            ],
            options={
                'verbose_name': 'Курс',
                'verbose_name_plural': 'Курсы',
                'ordering': ('-name',),
            },
        ),
        migrations.AddField(
            model_name='cycle',
            name='week',
            field=models.ManyToManyField(related_name='weeks', through='tgbot.AddWeekInCycle', to='tgbot.TreningWeek', verbose_name='Неделя'),
        ),
        migrations.AddField(
            model_name='addweekincycle',
            name='cycle',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='tgbot.cycle'),
        ),
        migrations.AddField(
            model_name='addweekincycle',
            name='week',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='tgbot.treningweek'),
        ),
        migrations.AddField(
            model_name='addtreningdayinweek',
            name='trening_day',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='tgbot.treningday'),
        ),
        migrations.AddField(
            model_name='addtreningdayinweek',
            name='week',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='tgbot.treningweek'),
        ),
        migrations.AddField(
            model_name='addexerciseintreningday',
            name='exercise',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='tgbot.exercise'),
        ),
        migrations.AddField(
            model_name='addexerciseintreningday',
            name='trening_day',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='tgbot.treningday'),
        ),
        migrations.AddField(
            model_name='addcycleintrening',
            name='cycle',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='tgbot.cycle'),
        ),
        migrations.AddField(
            model_name='addcycleintrening',
            name='trening',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='tgbot.trening'),
        ),
        migrations.AddField(
            model_name='user',
            name='available_training',
            field=models.ManyToManyField(default=tgbot.models.default_trening, related_name='user', to='tgbot.Trening', verbose_name='Доступные тренировки'),
        ),
        migrations.AddConstraint(
            model_name='addweekincycle',
            constraint=models.UniqueConstraint(fields=('cycle', 'week'), name='week_in_cycle'),
        ),
        migrations.AddConstraint(
            model_name='addtreningdayinweek',
            constraint=models.UniqueConstraint(fields=('week', 'trening_day'), name='treining_in_week'),
        ),
        migrations.AddConstraint(
            model_name='addexerciseintreningday',
            constraint=models.UniqueConstraint(fields=('trening_day', 'exercise'), name='trening_day_exercise_unique'),
        ),
        migrations.AddConstraint(
            model_name='addcycleintrening',
            constraint=models.UniqueConstraint(fields=('trening', 'cycle'), name='cycle_in_trening'),
        ),
    ]
